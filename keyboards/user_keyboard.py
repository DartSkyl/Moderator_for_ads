from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton, InlineKeyboardMarkup


kb_buttons = [
        [KeyboardButton(text='üìù –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ')],
        [KeyboardButton(text='üì® –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π')]
]

main_user_keyboard = ReplyKeyboardMarkup(
        keyboard=kb_buttons,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"
    )


user_cancel = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text='üö´ –û—Ç–º–µ–Ω–∞')]],
        resize_keyboard=True
)

user_back = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text='–ù–∞–∑–∞–¥')]],
        resize_keyboard=True
)

user_no_time = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å—Ä–∞–∑—É')]],
    resize_keyboard=True
)


user_file = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text='–î–∞–ª—å—à–µ ‚ñ∂Ô∏è')],
                  [KeyboardButton(text='üö´ –û—Ç–º–µ–Ω–∞')]],
        resize_keyboard=True
)

user_file_2 = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text='–î–∞–ª—å—à–µ ‚ñ∂Ô∏è')],
                  [KeyboardButton(text='‚óÄÔ∏è –ù–∞–∑–∞–¥')]],
        resize_keyboard=True
)

preview_keyboard = ReplyKeyboardMarkup(
        keyboard=[
                [KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é')],
                [KeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç'),
                 KeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ')],
                [KeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')],
                [KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ')]
        ],
        resize_keyboard=True
)


async def channels_choice_keys(channels_list):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞–Ω–∞–ª–∞–º–∏ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π"""
    ch_keys = InlineKeyboardBuilder()
    for c in channels_list:
        ch_keys.button(text=f'{c[1]}', callback_data=f'ch_id_{c[0]}')
    ch_keys.adjust(1)
    return ch_keys.as_markup()
